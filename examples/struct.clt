
struct Toto {
    Int     a
    Int     b
    String  c

    func init (Toto* this, Int a, Int b, String c) -> Void | (BadValueErr, DivByZeroErr) {
        // Err -> general purpose error
        // Or (*all errors)
        if a == 1 {
            return BadValueErr("a can't be 1")
        }
        if b == 0 {
            return DivByZeroErr("b can't be 0")
        }
        print(a / b)
        this.a = a    
        this.b = b
        this.c = c
    }
}


struct <T1, T2> ParamStruct {
    T1 a
    T2 b

    func ParamStruct (ParamStruct* this, T1 a, T2, b) -> Void | Err {
        this.a = a
        this.b = b
    }
}

struct Vec2 {
    Int x
    Int y

    func ParamStruct(Vec2* this, Int x, Int y) -> Void | . {
        // No errors
        this.x = x
        this.y = y
    }
}

func main () -> Void | Err {
    let t = toto(2, 2, "test")
    if ?t {
        print(?t)
    } 

    let p = <Int, Bool>ParamStruct(1, False)
    if ?p {
        return Err
    }
    print(p.a) // -> 1

    mut v = Vec2(1, 2)
    v = Vec2:{1, 2} // Casting from anonymous struct to Vec2
    

    p = {1, 2} // anonymous struct
}